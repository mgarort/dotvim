snippet ## "cell for Vim notebook"
##{
${0:code}
##}
endsnippet


# -------------------------
# SECTION:  Guatask
# ------------------------
#

snippet task "guatask task"
class ${1:TaskName}(${2:TaskParent}):
    debug = True
    requires = [${3:required tasks}]
    params = {${4:parameters}}
    directory = '${5:directory name}'
    subdirectory = '${6:subdirectory name}'
    output_filename = '${7:output filename}'

    def run(self):
	    ${8:Write here what the task is supposed to do.}

    def load_output(self):
	    ${9:Write here how the output of the task should be loaded (once completed).}
endsnippet

snippet requires "class attributes needed for guatask task"
requires = [${3:required tasks}]
params = {${4:parameters}}
directory = '${5:directory name}'
subdirectory = '${6:subdirectory name}'
output_filename = '${7:output filename}'
debug = True
def run(self):
    ${8:Write here what the task is supposed to do.}
def load_output(self):
    ${9:Write here how the output of the task should be loaded (once completed).}
endsnippet

snippet load_output "Task.load_output"
def load_output(self):
    ${0:raise NotImplementedError('Task.load_output not implemented')}
endsnippet

snippet hi "hi comment"
print('hi')
endsnippet

snippet bye "bye comment"
print('bye')
endsnippet


# -------------------------
# SECTION:  Headers and section delimiters
# ------------------------
#

snippet script "script header"
# ----------
# | SCRIPT | ${0:description}
# ----------
#
#
endsnippet

snippet section "python section"
# -------------------------
# SECTION:  ${0:description}
# ------------------------
#
endsnippet

snippet #### "# * 60"
##################################################
endsnippet


# -------------------------
# SECTION:  Comments (highlight words, quotes...)
# ------------------------
#
snippet X "XXX"
XXX 
endsnippet

snippet T "TODO" i
TODO 
endsnippet

snippet N "NOTE"
NOTE 
endsnippet

snippet D "DONE"
DONE 
endsnippet

snippet A "ANSWER" i
ANSWER
endsnippet

snippet ` "Inline code"
\`${0:code}\`
endsnippet

# -------------------------
# SECTION:  Imports
# ------------------------
#
snippet pd "pandas"
import pandas as pd
endsnippet

snippet np "numpy"
import numpy as np
endsnippet

snippet plt "pyplot"
import matplotlib.pyplot as plt
endsnippet

# -------------------------
# SECTION:  Popular functions and classes
# ------------------------
#

snippet expand "expand_chem_df"
expand_chem_df(${1:df},input_column='${2:col}',input_format='${3:format}',output_column='${4:col}',output_format='${5:format}')
endsnippet


snippet read_csv "pd.read_csv" i
read_csv(${1:path},sep='${2:sep}', header=${3:header})
endsnippet

snippet drop "DataFrame.drop_duplicates" i
drop_duplicates(subset=['${1:subset}'],keep='${2:first, last or False}')
endsnippet

snippet to_csv "DataFrame.to_csv" i
to_csv(${1:path},sep='${2:\t}',header=${3:bool},index=${4:bool})
endsnippet


# -------------------------
# SECTION:  Errors and exceptions
# ------------------------
#
snippet raise "NotImplementedError"
raise NotImplementedError('${0:message}')
endsnippet

snippet raise "ValueError"
raise ValueError('${0:message}')
endsnippet


# -------------------------
# SECTION:  Popular molecules
# ------------------------
#
snippet ibuprofen "Ibuprofen SMILES"
CC(Cc1ccc(cc1)C(C(=O)O)C)C
endsnippet
